@page "/MostUserLoans"
@inject ILoanManager LoanManager
@inject IUserManager UserManager

<MudTable Context="user" Items="@TopUsers">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Top 10 Borrowers</MudText>
        <MudSpacer />
    </ToolBarContent>
    <HeaderContent>
        <MudTh>ID</MudTh>
        <MudTh>FirstName</MudTh>
        <MudTh>LastName</MudTh>
        <MudTh>EmailAddress</MudTh>
        <MudTh>Number of Loans</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="ID">@user.Id</MudTd>
        <MudTd DataLabel="FirstName">@user.FirstName</MudTd>
        <MudTd DataLabel="LastName">@user.LastName</MudTd>
        <MudTd DataLabel="EmailAddress">@user.Email</MudTd>
        @foreach (var item in LoansByUser)
        {
            if (item.UserId == user.Id)
            {
                <MudTd DataLabel="Number of Reservations">@item.LoansCount</MudTd>
            }
        }
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>
@code {
    public List<User> TopUsers { get; set; } = new();
    public List<LoansByUser> LoansByUser { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        var loans = await LoanManager.GetAllLoansAsync();

        var count = loans.GroupBy(s => s.UserId)
            .Select(grp => new
            {
                userId = grp.Key,
                loansCount = grp.Count()
            }).OrderByDescending(l => l.loansCount).ToList();

        List<int> topUsersUserId = new();

        for (int index = 0; index < count.Count && index <= 9; index++)
        {
            LoansByUser lbu = new();
            lbu.UserId = (int)count[index].userId;
            lbu.LoansCount = (int)count[index].loansCount;
            LoansByUser.Add(lbu);
        }

        foreach (var user in LoansByUser)
        {
            var topUser = await UserManager.GetUser(user.UserId);
            TopUsers.Add(topUser);
        }
    }

    bool ProductsToBeReturned;
    bool WhoLoansAlot;
    bool PopularProducts;

    void ShowProductsToBeReturned()
    {
        _ = !ProductsToBeReturned ? ProductsToBeReturned = true : ProductsToBeReturned = false;
    }

    void ShowWhoLoansAlot()
    {
        _ = !WhoLoansAlot ? WhoLoansAlot = true : WhoLoansAlot = false;
    }

    void ShowPopularProducts()
    {
        _ = !PopularProducts ? PopularProducts = true : PopularProducts = false;
    }

}
